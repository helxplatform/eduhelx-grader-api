"""Remove user roles/permissions in database in favor of native implementation

Revision ID: 4e5e958c939f
Revises: 9567f2421e2f
Create Date: 2023-09-15 16:57:46.531630+00:00

"""
from alembic import op
from app.core.role_permissions import UserRoleType
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4e5e958c939f'
down_revision = '9567f2421e2f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop fkey constraint and rename to role
    op.drop_constraint('user_account_role_name_fkey', 'user_account', type_='foreignkey')
    # Change type from String to UserRoleType (which implements String)
    op.alter_column('user_account', 'role_name', new_column_name='role')
    op.alter_column('user_account', 'role', type_=UserRoleType(length=64))
    op.drop_index('ix_user_role_permission_id', table_name='user_role_permission')
    op.drop_table('user_role_permission')
    op.drop_index('ix_user_role_id', table_name='user_role')
    op.drop_table('user_role')
    op.drop_index('ix_user_permission_id', table_name='user_permission')
    op.drop_table('user_permission')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_account', sa.Column('role_name', sa.TEXT(), autoincrement=False, nullable=False))
    op.create_foreign_key('user_account_role_name_fkey', 'user_account', 'user_role', ['role_name'], ['name'])
    op.drop_column('user_account', 'role')
    op.create_table('user_role_permission',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('permission_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permission_name'], ['user_permission.name'], name='user_role_permission_permission_name_fkey'),
    sa.ForeignKeyConstraint(['role_name'], ['user_role.name'], name='user_role_permission_role_name_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_role_permission_pkey'),
    sa.UniqueConstraint('role_name', 'permission_name', name='user_role_permission_role_name_permission_name_key')
    )
    op.create_index('ix_user_role_permission_id', 'user_role_permission', ['id'], unique=False)
    op.create_table('user_permission',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_permission_pkey'),
    sa.UniqueConstraint('name', name='user_permission_name_key')
    )
    op.create_index('ix_user_permission_id', 'user_permission', ['id'], unique=False)
    op.create_table('user_role',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_role_pkey'),
    sa.UniqueConstraint('name', name='user_role_name_key')
    )
    op.create_index('ix_user_role_id', 'user_role', ['id'], unique=False)
    # ### end Alembic commands ###
